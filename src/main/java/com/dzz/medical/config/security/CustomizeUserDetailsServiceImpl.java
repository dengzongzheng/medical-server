package com.dzz.medical.config.security;import com.dzz.medical.common.response.ResponseDzz;import com.dzz.medical.domain.model.SystemUser;import com.dzz.medical.service.SystemUserService;import java.util.HashSet;import java.util.Objects;import java.util.Set;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.stereotype.Component;/** * 用户数据授权服务 * @author dzz * @since  2017年04月20 上午9:52 * @version  1.0.0 */@Component@Slf4jpublic class CustomizeUserDetailsServiceImpl implements UserDetailsService {    private SystemUserService userService;    @Autowired    public void setUserService(SystemUserService userService) {        this.userService = userService;    }    /**     * 用户认证     * @param userName 用户名     * @return 用户实体     * @throws UsernameNotFoundException 未找到相关用户异常     */    @Override    public CustomizeUser loadUserByUsername(String userName) throws UsernameNotFoundException {        ResponseDzz<SystemUser> responseDzz = userService.getUserByName(userName);        if(responseDzz.checkFail() || Objects.isNull(responseDzz.getData())) {            throw new UsernameNotFoundException("用户不存在");        }        SystemUser originUser = responseDzz.getData();        Set<GrantedAuthority> authorities = new HashSet<>();        CustomizeUser user = new CustomizeUser(userName, originUser.getPassword(),authorities);        user.setStatus(originUser.getStatus());        return user;    }}